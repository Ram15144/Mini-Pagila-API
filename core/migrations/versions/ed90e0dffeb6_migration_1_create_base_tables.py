"""Migration 1: Create base tables

Revision ID: ed90e0dffeb6
Revises: 
Create Date: 2025-09-26 10:33:23.996384

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ed90e0dffeb6'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('category',
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=25), nullable=False),
    sa.Column('last_update', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('category_id', name=op.f('pk_category'))
    )
    op.create_table('country',
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.Column('country', sa.String(length=50), nullable=False),
    sa.Column('last_update', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('country_id', name=op.f('pk_country'))
    )
    op.create_table('language',
    sa.Column('language_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.Column('last_update', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('language_id', name=op.f('pk_language'))
    )
    op.create_table('city',
    sa.Column('city_id', sa.Integer(), nullable=False),
    sa.Column('city', sa.String(length=50), nullable=False),
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.Column('last_update', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['country_id'], ['country.country_id'], name=op.f('fk_city_country_id_country')),
    sa.PrimaryKeyConstraint('city_id', name=op.f('pk_city'))
    )
    op.create_table('address',
    sa.Column('address_id', sa.Integer(), nullable=False),
    sa.Column('address', sa.String(length=50), nullable=False),
    sa.Column('address2', sa.String(length=50), nullable=True),
    sa.Column('district', sa.String(length=20), nullable=False),
    sa.Column('city_id', sa.Integer(), nullable=False),
    sa.Column('postal_code', sa.String(length=10), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=False),
    sa.Column('last_update', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['city_id'], ['city.city_id'], name=op.f('fk_address_city_id_city')),
    sa.PrimaryKeyConstraint('address_id', name=op.f('pk_address'))
    )
    op.create_table('staff',
    sa.Column('staff_id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=45), nullable=False),
    sa.Column('last_name', sa.String(length=45), nullable=False),
    sa.Column('address_id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=50), nullable=True),
    sa.Column('store_id', sa.Integer(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('username', sa.String(length=16), nullable=False),
    sa.Column('password', sa.String(length=40), nullable=True),
    sa.Column('last_update', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('picture', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['address_id'], ['address.address_id'], name=op.f('fk_staff_address_id_address')),
    sa.PrimaryKeyConstraint('staff_id', name=op.f('pk_staff'))
    )
    op.create_table('store',
    sa.Column('store_id', sa.Integer(), nullable=False),
    sa.Column('manager_staff_id', sa.Integer(), nullable=True),
    sa.Column('address_id', sa.Integer(), nullable=False),
    sa.Column('last_update', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['address_id'], ['address.address_id'], name=op.f('fk_store_address_id_address')),
    sa.ForeignKeyConstraint(['manager_staff_id'], ['staff.staff_id'], name=op.f('fk_store_manager_staff_id_staff')),
    sa.PrimaryKeyConstraint('store_id', name=op.f('pk_store'))
    )
    op.create_foreign_key('fk_staff_store_id_store', 'staff', 'store', ['store_id'], ['store_id'])
    op.create_table('film',
    sa.Column('film_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('release_year', sa.Integer(), nullable=True),
    sa.Column('language_id', sa.Integer(), nullable=False),
    sa.Column('rental_duration', sa.Integer(), nullable=False),
    sa.Column('rental_rate', sa.Numeric(precision=4, scale=2), nullable=False),
    sa.Column('length', sa.Integer(), nullable=True),
    sa.Column('replacement_cost', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('rating', sa.String(length=10), nullable=True),
    sa.Column('special_features', sa.Text(), nullable=True),
    sa.Column('last_update', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['language_id'], ['language.language_id'], name=op.f('fk_film_language_id_language')),
    sa.PrimaryKeyConstraint('film_id', name=op.f('pk_film'))
    )
    op.create_table('film_category',
    sa.Column('film_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('last_update', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['category.category_id'], name=op.f('fk_film_category_category_id_category')),
    sa.ForeignKeyConstraint(['film_id'], ['film.film_id'], name=op.f('fk_film_category_film_id_film')),
    sa.PrimaryKeyConstraint('film_id', 'category_id', name=op.f('pk_film_category'))
    )
    op.create_table('inventory',
    sa.Column('inventory_id', sa.Integer(), nullable=False),
    sa.Column('film_id', sa.Integer(), nullable=False),
    sa.Column('store_id', sa.Integer(), nullable=False),
    sa.Column('last_update', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['film_id'], ['film.film_id'], name=op.f('fk_inventory_film_id_film')),
    sa.ForeignKeyConstraint(['store_id'], ['store.store_id'], name=op.f('fk_inventory_store_id_store')),
    sa.PrimaryKeyConstraint('inventory_id', name=op.f('pk_inventory'))
    )
    op.create_table('customer',
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('store_id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=45), nullable=False),
    sa.Column('last_name', sa.String(length=45), nullable=False),
    sa.Column('email', sa.String(length=50), nullable=True),
    sa.Column('address_id', sa.Integer(), nullable=False),
    sa.Column('activebool', sa.Boolean(), nullable=False),
    sa.Column('create_date', sa.Date(), server_default=sa.text('CURRENT_DATE'), nullable=False),
    sa.Column('last_update', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('active', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['address_id'], ['address.address_id'], name=op.f('fk_customer_address_id_address')),
    sa.ForeignKeyConstraint(['store_id'], ['store.store_id'], name=op.f('fk_customer_store_id_store')),
    sa.PrimaryKeyConstraint('customer_id', name=op.f('pk_customer'))
    )
    op.create_table('rental',
    sa.Column('rental_id', sa.Integer(), nullable=False),
    sa.Column('rental_date', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('inventory_id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('return_date', sa.DateTime(), nullable=True),
    sa.Column('staff_id', sa.Integer(), nullable=False),
    sa.Column('last_update', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['customer_id'], ['customer.customer_id'], name=op.f('fk_rental_customer_id_customer')),
    sa.ForeignKeyConstraint(['inventory_id'], ['inventory.inventory_id'], name=op.f('fk_rental_inventory_id_inventory')),
    sa.ForeignKeyConstraint(['staff_id'], ['staff.staff_id'], name=op.f('fk_rental_staff_id_staff')),
    sa.PrimaryKeyConstraint('rental_id', name=op.f('pk_rental'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('rental')
    op.drop_table('customer')
    op.drop_table('inventory')
    op.drop_table('film_category')
    op.drop_table('film')
    op.drop_constraint('fk_staff_store_id_store', 'staff', type_='foreignkey')
    op.drop_table('store')
    op.drop_table('staff')
    op.drop_table('address')
    op.drop_table('city')
    op.drop_table('language')
    op.drop_table('country')
    op.drop_table('category')
    # ### end Alembic commands ###
